<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahTweets.Views.Controls"
                    xmlns:controls="clr-namespace:Microsoft.Phone.Controls;assembly=MahTweets.UI"
                    xmlns:Controls1="clr-namespace:MahTweets.UI.Controls;assembly=MahTweets.UI"
                    xmlns:Converters="clr-namespace:MahTweets.UI.Converters;assembly=MahTweets.UI">

  <Style TargetType="{x:Type Controls:ContainerView}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <Grid />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:ContainerView}">
          <Grid x:Name="ContainerViewGrid" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform />
                <SkewTransform />
                <RotateTransform />
                <TranslateTransform />
              </TransformGroup>
            </Grid.RenderTransform>
            <Grid.Resources>
              <Storyboard x:Key="ShowConfirmClose">
                <DoubleAnimationUsingKeyFrames
Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
Storyboard.TargetName="confirmClose">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames
Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                  <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#59000000">
                    <EasingColorKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseOut" />
                    </EasingColorKeyFrame.EasingFunction>
                  </EasingColorKeyFrame>
                </ColorAnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.ZIndex)"
                                              Storyboard.TargetName="rectangle">
                  <EasingInt32KeyFrame KeyTime="0:0:0.5" Value="100" />
                </Int32AnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HideConfirmClose">
                <DoubleAnimationUsingKeyFrames
Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
Storyboard.TargetName="confirmClose">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-100">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames
Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                  <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#00000000">
                    <EasingColorKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseIn" />
                    </EasingColorKeyFrame.EasingFunction>
                  </EasingColorKeyFrame>
                </ColorAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="RemoveStream">
                <DoubleAnimationUsingKeyFrames
Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
Storyboard.TargetName="ContainerViewGrid">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-313">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="ContainerViewGrid">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>

              <Storyboard x:Key="AddStream">
                <DoubleAnimationUsingKeyFrames
Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
Storyboard.TargetName="ContainerViewGrid">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0" Value="-313">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="ContainerViewGrid">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CircleEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>

            <Grid.Triggers>
              <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard x:Name="AddStream_BeginStoryboard"
                                 Storyboard="{StaticResource AddStream}" />
              </EventTrigger>
            </Grid.Triggers>
            <ItemsPresenter />

            <Rectangle x:Name="rectangle" Fill="#00000000" Margin="0,-35,0,0" Grid.Row="1" Stroke="Black"
                       RenderTransformOrigin="0.5,0.5" Grid.RowSpan="2" StrokeThickness="0" IsHitTestVisible="False">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>

            <Controls:ConfirmClose x:Name="confirmClose" Grid.RowSpan="3" Panel.ZIndex="100" Height="100"
                                   VerticalAlignment="Top" Background="{DynamicResource BackgroundBrush}" RenderTransformOrigin="0.5,0.5">
              <Controls:ConfirmClose.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform Y="-100" />
                </TransformGroup>
              </Controls:ConfirmClose.RenderTransform>
            </Controls:ConfirmClose>
          </Grid>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type Controls1:StatusUpdateView}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <Grid />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls1:StatusUpdateView}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="MouseEnter">
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                             Storyboard.TargetName="grdTweetControls" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.01" Value="{x:Static Visibility.Visible}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="MouseLeave">
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                             Storyboard.TargetName="grdTweetControls" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.01" Value="{x:Static Visibility.Hidden}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Converters:BitmapIgnoreMetadataConverter x:Key="BitmapIgnoreMetadataConverter" />
          </ControlTemplate.Resources>

          <StackPanel>
            <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="0,2,0,0" x:Name="grdUpdate">
              <Grid.Triggers>
                <EventTrigger RoutedEvent="Grid.MouseEnter" SourceName="grdUpdate">
                  <BeginStoryboard Storyboard="{StaticResource MouseEnter}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="Grid.MouseLeave" SourceName="grdUpdate">
                  <BeginStoryboard Storyboard="{StaticResource MouseLeave}" />
                </EventTrigger>
              </Grid.Triggers>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{DynamicResource AvatarGridWidth}" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition x:Name="rdReply" Height="0" />
              </Grid.RowDefinitions>

              <Grid VerticalAlignment="Top" Grid.Column="0" Width="{DynamicResource AvatarWidth}"
                    Margin="0,1,0,0" Grid.Row="0">
                <Grid.RowDefinitions>
                  <RowDefinition Height="{DynamicResource AvatarGridHeight}" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Image Grid.Row="0"
                       Source="{Binding Contact.ImageUrl, Converter={StaticResource BitmapIgnoreMetadataConverter}}" VerticalAlignment="Top"
                       HorizontalAlignment="Left" Width="{DynamicResource AvatarWidth}" Height="{DynamicResource AvatarWidth}" />
                <Grid Background="#7FFFFFFF" x:Name="grdTweetControls" Grid.Row="0" Visibility="Hidden">
                  <ItemsPresenter />
                </Grid>

                <ContentPresenter Name="PART_BelowAvatar" Grid.Row="1"
                                  Content="{Binding BelowAvatar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}"
                                  DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}" />
              </Grid>
              <Border Margin="2,0,0,0" Grid.Column="1" Grid.Row="0" BorderThickness="1"
                      BorderBrush="{DynamicResource TransparentColour}">
                <Grid
Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Controls1:ColourableContentPresenter}}}">
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>

                  <StackPanel Margin="3,0,0,0" VerticalAlignment="Top"
                              Grid.Row="{DynamicResource UpdateTextGridRow}">
                    <WrapPanel VerticalAlignment="Top" Margin="0,0,0,0">
                      <TextBlock Text="{Binding Contact.Name}"
                                 Foreground="{DynamicResource BaseColour}" FontWeight="Bold" Cursor="Hand" Width="Auto" HorizontalAlignment="Left"
                                 VerticalAlignment="Bottom" Margin="0" ToolTip="{Binding Contact.PrettyPrintFullDetails}" Tag="{Binding}"
                                 x:Name="PART_ContactName" />

                      <ContentPresenter Name="PART_InlineWithContactName"
                                        Content="{Binding InlineWithContactName, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}"
                                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}" />
                    </WrapPanel>

                    <Controls1:StatusUpdateTextbox x:Name="StatusUpdateTextbox"
                                                   Text="{Binding Text}" DataContext="{Binding}" VerticalAlignment="Top" IsReadOnly="True" BorderThickness="0"
                                                   Margin="-5,0,-3,0" SnapsToDevicePixels="True" IsDocumentEnabled="True" Background="{x:Null}">
                      <Controls1:StatusUpdateTextbox.ContextMenu>
                        <ContextMenu x:Name="_selectedtext" />
                      </Controls1:StatusUpdateTextbox.ContextMenu>
                      <Controls1:StatusUpdateTextbox.Foreground>
                        <SolidColorBrush Color="{DynamicResource Text}" />
                      </Controls1:StatusUpdateTextbox.Foreground>
                    </Controls1:StatusUpdateTextbox>

                    <ContentPresenter Name="PART_BelowTextBox"
                                      Content="{Binding BelowTextBox, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}"
                                      DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}" />
                  </StackPanel>
                </Grid>
              </Border>
            </Grid>
            <Grid Margin="0,2,2,0" x:Name="spReply" HorizontalAlignment="Stretch" Visibility="Hidden"
                  Height="0" Background="{DynamicResource HoverColour}">
              <ContentPresenter Name="PART_ReplyExtras"
                                Content="{Binding ReplyExtras, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}"
                                DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}"
                                VerticalAlignment="Top" HorizontalAlignment="Left" Width="38" Height="34" />
              <Controls1:CompositionBox x:Name="txtReply" Panel.ZIndex="99" VerticalAlignment="Top"
                                        HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" Margin="38,0,0,5"
                                        Controls1:Margins.Left="{DynamicResource AvatarWidth}" />
            </Grid>
            <ContentPresenter Name="PART_BelowReplyExtras"
                              Content="{Binding BelowReplyExtras, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}"
                              DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls1:StatusUpdateView}}}"
                              VerticalAlignment="Top" HorizontalAlignment="Left" Margin="38,0,0,0"
                              Controls1:Margins.Left="{DynamicResource AvatarWidth}" />
          </StackPanel>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type controls:ToggleSwitchButton}">
    <!--<Setter Property="Background" Value="{StaticResource PhoneBackgroundBrush}"/>-->
    <Setter Property="IsTabStop" Value="False" />
    <!--<Setter Property="SwitchForeground" Value="{StaticResource PhoneAccentBrush}"/>-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:ToggleSwitchButton">
          <Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" Opacity="{TemplateBinding Opacity}"
                  Padding="{TemplateBinding Padding}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimation Storyboard.TargetName="SwitchBottom"
                                    Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Duration="0" To="{TemplateBinding Foreground}" />
                    <ColorAnimation Storyboard.TargetName="ThumbCenter"
                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0" To="{TemplateBinding Foreground}" />
                    <DoubleAnimation Storyboard.TargetName="Root"
                                     Storyboard.TargetProperty="Opacity" Duration="0" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.05" To="Unchecked" />
                  <VisualTransition GeneratedDuration="0:0:0.05" To="Checked" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BackgroundTranslation"
                                     Storyboard.TargetProperty="(TranslateTransform.X)" Duration="0" To="68">
                      <DoubleAnimation.EasingFunction>
                        <ExponentialEase Exponent="15" EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="ThumbTranslation"
                                     Storyboard.TargetProperty="(TranslateTransform.X)" Duration="0" To="68">
                      <DoubleAnimation.EasingFunction>
                        <ExponentialEase Exponent="15" EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Dragging" />
                <VisualState x:Name="Unchecked">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BackgroundTranslation"
                                     Storyboard.TargetProperty="(TranslateTransform.X)" Duration="0" To="0" />
                    <DoubleAnimation Storyboard.TargetName="ThumbTranslation"
                                     Storyboard.TargetProperty="(TranslateTransform.X)" Duration="0" To="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="SwitchRoot" Background="Transparent" Height="95" Width="136">
              <Grid x:Name="SwitchTrack" Width="88">
                <Grid x:Name="SwitchBottom" Background="{TemplateBinding SwitchForeground}" Height="32">
                  <Rectangle x:Name="SwitchBackground" Fill="{TemplateBinding Background}" Width="76"
                             Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Rectangle.RenderTransform>
                      <TranslateTransform x:Name="BackgroundTranslation" />
                    </Rectangle.RenderTransform>
                  </Rectangle>
                  <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="2">
                    <Border BorderBrush="{TemplateBinding Background}" BorderThickness="4" />
                  </Border>
                </Grid>
                <Border x:Name="SwitchThumb" BorderBrush="{TemplateBinding Background}"
                        BorderThickness="4,0" Margin="-4,0" Width="28" Height="36" HorizontalAlignment="Left">
                  <Border.RenderTransform>
                    <TranslateTransform x:Name="ThumbTranslation" />
                  </Border.RenderTransform>
                  <Border x:Name="ThumbCenter" BorderBrush="{TemplateBinding Foreground}"
                          BorderThickness="2" Background="White" />
                </Border>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type controls:ToggleSwitch}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:ToggleSwitch">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Header"
                                     Storyboard.TargetProperty="Opacity" Duration="0" To="0.3" />
                    <DoubleAnimation Storyboard.TargetName="Content"
                                     Storyboard.TargetProperty="Opacity" Duration="0" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="12,5,0,0">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ContentControl x:Name="Header" FontWeight="Bold" Content="{TemplateBinding Header}"
                              ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{TemplateBinding BorderBrush}"
                              HorizontalAlignment="Left" IsTabStop="False" Margin="-1,0,0,0" Opacity="{TemplateBinding Opacity}"
                              VerticalAlignment="Bottom" />
              <ContentControl x:Name="Content" Grid.Row="1" Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsTabStop="False" Margin="-1,1,0,-7" Opacity="{TemplateBinding Opacity}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              <controls:ToggleSwitchButton x:Name="Switch" Grid.RowSpan="2" Grid.Column="1"
                                           Background="{TemplateBinding Background}" Margin="-22,-29,-24,-28" Opacity="{TemplateBinding Opacity}"
                                           SwitchForeground="{TemplateBinding SwitchForeground}" VerticalAlignment="Bottom" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>